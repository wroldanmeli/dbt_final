{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-06-06T18:44:27.800950Z", "invocation_id": "1d19a670-c401-4884-8ddf-24f81bbf9ec1", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:43:45.951289Z", "completed_at": "2024-06-06T18:43:45.967955Z"}, {"name": "execute", "started_at": "2024-06-06T18:43:45.970027Z", "completed_at": "2024-06-06T18:43:45.970056Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02344369888305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_BillingDashControlBase", "compiled": true, "compiled_code": "\n\nWITH \n    fecha_tablas AS (\n        SELECT table_id,\n               TIMESTAMP_MILLIS(last_modified_time) DateTIme_lastUpd, \n               row_count Count_rows, \n               size_bytes\n        FROM `metrics-streams-dev`.`ProcessedData`.`__TABLES__` ),\n\n    days_dummies AS (\n        SELECT days_gen FROM \n        UNNEST(GENERATE_DATE_ARRAY(PARSE_DATE('%F', '2022-01-01'), DATE(CURRENT_DATE() - INTERVAL 2 DAY) , INTERVAL 1 DAY))  AS days_gen\n        ),\n\n    pipelines_dummies AS (\n       SELECT idproceso, \n              proceso,\n              Responsable \n       FROM ManagementData.tproceso \n       WHERE idproceso in ( \n              SELECT DISTINCT idproceso FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabFuryAllocation` WHERE idproceso NOT IN (88) \n              UNION ALL \n              SELECT 29 )),\n\n    pipes_day_real AS (\n       SELECT DATE(B.datetime) dia,\n                   B.idproceso, \n                   COUNT(1) conteo ,\n                   SUM(B.total_cost) total_cost\n       FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabFuryAllocation` B \n       INNER JOIN pipelines_dummies C\n             ON(B.idproceso=C.idproceso)\n       GROUP BY 1,2 \n       UNION ALL\n       SELECT DATE(D.datetime) dia,\n                   29 idproceso, \n                   COUNT(1) conteo ,\n                   SUM(D.total_cost) total_cost\n       FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabMelidata` D\n       GROUP BY 1,2\n       UNION ALL\n       SELECT DATE(E.datetime) dia,\n                   155 idproceso, \n                   COUNT(1) conteo ,\n                   SUM(E.total_cost) total_cost\n       FROM  `metrics-streams-dev`.`ProcessedData`.`BillingtabBQMeliBIData` E\n       GROUP BY 1,2 \n       UNION ALL\n       SELECT DATE(F.datetime) dia,\n                   155 idproceso, \n                   COUNT(1) conteo ,\n                   SUM(F.total_cost) total_cost\n       FROM  `metrics-streams-dev`.`ProcessedData`.`BillingtabGENAI` F\n       GROUP BY 1,2 \n       UNION ALL\n       SELECT DATE(G.datetime) dia,\n                   155 idproceso, \n                   COUNT(1) conteo ,\n                   SUM(G.total_cost) total_cost\n       FROM  `metrics-streams-dev`.`ProcessedData`.`BillingtabMelidataBIFinalCosts` G\n       GROUP BY 1,2 \n       ),\n\n    cruce_pipes_values AS (\n       SELECT A.*,\n              B.dia,\n              B.conteo,\n              B.total_cost \n       FROM pipelines_dummies A  \n       LEFT JOIN pipes_day_real B \n            ON (A.idproceso=B.idproceso) \n       ),\n\n    matriz_days_pipes AS (\n       SELECT * \n       FROM days_dummies, pipelines_dummies\n       ),\n\n    selected_base AS (\n       SELECT A.days_gen day, \n              A.idproceso,\n              A.proceso,\n              A.responsable,\n              ROUND(COALESCE(B.conteo,null,0),0) conteo,\n              ROUND(COALESCE(B.total_cost,null,0),2) total_cost \n       FROM  matriz_days_pipes A  \n       LEFT JOIN cruce_pipes_values B \n            ON (A.days_gen = B.dia AND A.idproceso=B.idproceso) \n       ) \n\n    SELECT A.*,\n      SUM(A.conteo)     OVER (PARTITION BY A.day ORDER BY day DESC) AS total_rows_day,\n      SUM(A.total_cost) OVER (PARTITION BY A.day ORDER BY day DESC) AS total_cost_day,\n      AVG(A.conteo)     OVER (PARTITION BY DATE(DATE_TRUNC(A.day , WEEK)), idproceso ) AS avg_rows_week,\n      AVG(A.total_cost) OVER (PARTITION BY DATE(DATE_TRUNC(A.day , WEEK)), idproceso ) AS avg_cost_week,\n      AVG(A.conteo)     OVER (PARTITION BY DATE(DATE_TRUNC(A.day , MONTH)), idproceso ) AS avg_rows_month,\n      AVG(A.total_cost) OVER (PARTITION BY DATE(DATE_TRUNC(A.day , MONTH)),idproceso ) AS avg_cost_month \n   FROM selected_base A", "relation_name": "`metrics-streams-dev`.`ProcessedData`.`BillingDashControlBase`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:43:45.975900Z", "completed_at": "2024-06-06T18:43:45.983416Z"}, {"name": "execute", "started_at": "2024-06-06T18:43:45.985470Z", "completed_at": "2024-06-06T18:43:45.985493Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013153791427612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_process_output", "compiled": true, "compiled_code": "\n\n\n\nWITH \n    get_lista AS (SELECT '[]' as lista_in),\n    full_proc AS (SELECT DISTINCT idprocesopadre as idproceso FROM `metrics-streams-dev`.`ManagementData`.`tproceso` ),\n    list_cut AS (SELECT REPLACE(REPLACE(REPLACE(lista_in,'[',''),']',''),' ','')  as lista_cut FROM get_lista ),\n    proc_input AS (SELECT ARRAY_CONCAT(ARRAY_AGG(CAST(listado AS INT64)),[44]) array_process\n                                FROM list_cut , UNNEST(SPLIT(lista_cut)) AS listado),\n    partial_list AS (SELECT idproceso FROM proc_input , UNNEST(array_process) AS idproceso),                           \n    proc_output AS (SELECT A.idproceso FROM partial_list A WHERE EXISTS(SELECT 'X' FROM full_proc B WHERE A.idproceso = B.idproceso))                            \n\n    \n    SELECT * FROM  \n       full_proc\n    ", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_process_output`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:43:45.992353Z", "completed_at": "2024-06-06T18:43:46.004557Z"}, {"name": "execute", "started_at": "2024-06-06T18:43:46.006596Z", "completed_at": "2024-06-06T18:43:46.006619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018638134002685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.BillingfacAllocationFinal.final_val_int_list_test", "compiled": true, "compiled_code": "\n\n\n\nWITH \n    full_proc AS (SELECT DISTINCT idprocesopadre as idproceso FROM `metrics-streams-dev`.`ManagementData`.`tproceso` ), \n    \n        get_lista AS (SELECT CONCAT('[', STRING_AGG(CONCAT(CAST(idproceso AS STRING)), ','), ']') AS lista_in\n                FROM ( SELECT DISTINCT idprocesopadre AS idproceso  FROM ManagementData.tproceso )),\n      \n    list_cut AS (SELECT REPLACE(REPLACE(REPLACE(lista_in,'[',''),']',''),' ','')  as lista_cut FROM get_lista ),\n    proc_input AS (SELECT ARRAY_CONCAT(ARRAY_AGG(CAST(listado AS INT64)),[44]) array_process\n                                FROM list_cut , UNNEST(SPLIT(lista_cut)) AS listado),\n    partial_list AS (SELECT idproceso FROM proc_input , UNNEST(array_process) AS idproceso),                           \n    proc_output AS (SELECT A.idproceso FROM partial_list A WHERE EXISTS(SELECT 'X' FROM full_proc B WHERE A.idproceso = B.idproceso))                            \n\n    SELECT * FROM proc_output", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:43:46.012385Z", "completed_at": "2024-06-06T18:44:00.160174Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:00.162392Z", "completed_at": "2024-06-06T18:44:00.162420Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 14.153807401657104, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_last_snapshot", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output`\nSELECT DATE(datetime) day_snap, '20240606184300' sufijo , COUNT(1) records_snap, CAST(ROUND(SUM(total_cost),0) AS INT64) cost_snap \n        FROM ProcessedData_REPRO_snapshots.BillingfacAllocationFinal_20240606184300  \n        GROUP BY 1", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_last_snapshot`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:00.168828Z", "completed_at": "2024-06-06T18:44:04.985180Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:04.988805Z", "completed_at": "2024-06-06T18:44:04.988837Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.824629306793213, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.substract_get_OffFury_aws", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` \n\n\n\n\n\n\n\n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n\n\n\n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n\n\n\n\n\nSELECT \n        cast(timestamp_trunc(line_item_usage_start_date,DAY) as DATETIME) as datetime,\n        line_item_usage_account_id as account_id\n        ,product_product_name as service_type\n        ,line_item_usage_type as billing_key      \n        ,CASE WHEN resource_tags_user_cloudcontroller_stack= '' or resource_tags_user_cloudcontroller_stack is null THEN\n          'NO-STACK'\n        ELSE\n          resource_tags_user_cloudcontroller_stack\n        END as service_name\n        ,cast(SUM(CASE WHEN line_item_line_item_type = 'DiscountedUsage' THEN \n            reservation_effective_cost\n            WHEN line_item_line_item_type = 'Usage' THEN \n              line_item_unblended_cost\n            WHEN line_item_line_item_type = 'SavingsPlanCoveredUsage' THEN\n              savings_plan_savings_plan_effective_cost\n            WHEN line_item_line_item_type = 'Fee' \n                  AND product_product_name in ('AWS Premium Support','OCBOCBAWSDirectConnect') or bill_billing_entity = 'AWS Marketplace' THEN \n                line_item_unblended_cost\n            END) as numeric) as total_cost\n        ,pricing_unit as billing_unit\n        ,cast(SUM(line_item_usage_amount) as numeric) as billing_usage_ammount\n        ,'AWS' as provider\n        ,current_date()  load_date  \n        ,current_date() update_date\n        ,'Test dbt' as observation\n        FROM `metrics-streams-dev`.`RawData`.`billing_edp`  \n        WHERE year >= 2024\n              and year <= 2024\n              and month >= 6\n              and month <=  6\n              and date(line_item_usage_start_date) >= cast(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) as datetime) and date(line_item_usage_start_date) <=cast(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) as datetime)\n              AND line_item_line_item_type IN ('DiscountedUsage', 'Usage', 'RIFee', 'SavingsPlanCoveredUsage', 'Fee')\n              AND line_item_usage_type NOT LIKE '%HeavyUsage%' \n               AND (   ( line_item_usage_account_id = \"165742082170\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"698901797328\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"150890519415\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"122375311039\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"272718278578\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"886495075632\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"796854892605\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"796854892605\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"751671831563\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"270916447595\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  ( line_item_usage_account_id = \"750993754488 \" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\"))  OR (line_item_line_item_description like \"%Conditional Deal%\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_operation  =  \"NatGateway\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonElastiCache\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonEC2\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSELB\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonDynamoDB\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"047141863347\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"598925332888\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"958338282214\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"537757959597\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonCloudFront\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSELB\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"205860777463\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonRoute53\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSCertificateManager\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonApiGateway\" AND  line_item_usage_account_id = \"749651711864\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSShield\" AND  line_item_usage_account_id = \"621237723456\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AWSDirectConnect\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"AmazonVPC\" AND  line_item_usage_account_id = \"690399877577\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_product_code = \"awswaf\" AND  line_item_usage_account_id = \"558628470851\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_resource_id = \"traffic-layer-logs-current\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (line_item_usage_type = \"Global-SoftwareUsage-Contracts\" AND  line_item_usage_account_id = \"199745886785\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"070958878125\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"161094425896\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"281193985665\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"014991816441\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"913292487988\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"635950459433\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"767428572615\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"627632095367\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"830619001108\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"128464316945\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"228092041116\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"961618667388\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"470332157166\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"955895235416\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"088484141381\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_product_name = \"Amazon Simple Storage Service\" AND  line_item_usage_account_id = \"632765385162\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (product_servicecode = \"AWSDataTransfer\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_application = \"traffic-layer\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_application != \"\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_cb_application = \"melidata-generic-streams\" AND  line_item_usage_account_id = \"968153641465\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_name like  \"md-spark%\" AND  line_item_usage_account_id = \"968153641465\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_name like \"data-apps-nomad%\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_name like  \"md-presto%\" AND  line_item_usage_account_id = \"968153641465\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_name like  \"md-hive%\" AND  line_item_usage_account_id = \"968153641465\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_name  = \"fury-controlplane\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_owner = \"serverless\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service = \"bigq\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service = \"mq\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service = \"furylogs\" AND  line_item_usage_account_id = \"433070516464\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service = \"furylogs-test\" AND  line_item_usage_account_id = \"433070516464\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service = \"ds\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service = \"kvs\" AND  line_item_usage_account_id = \"019704497826\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource_tags_user_service like \"object-storage%\" AND  line_item_usage_account_id = \"736370371722\" AND ( line_item_usage_start_date BETWEEN \"2024-06-01\" AND \"2024-06-05\")))\n        GROUP BY 1,2,3,4,5,7,9,10,11,12\n        having total_cost>0\n        ORDER BY 9,1", "relation_name": "`metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_aws`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:05.000284Z", "completed_at": "2024-06-06T18:44:09.504255Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:09.506996Z", "completed_at": "2024-06-06T18:44:09.507024Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.512223482131958, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.substract_get_OffFury_gcp", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` \n\n\n\n\n\n\n\n\n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n\n\n\n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n\n\n\n\n                      \n        \n\n                      \n        \n\n                      \n        \n\n\nSELECT\n      cast(TIMESTAMP_TRUNC(usage_start_time, DAY) AS datetime) datetime,\n      CASE\n        WHEN PROJECT.id IS NULL THEN 'Cargos no especificos de un proyecto'\n        ELSE\n          PROJECT.id\n      END AS account_id,\n      service.description AS service_type,\n      sku.description AS billing_key,\n      'NO-STACK' AS service_name,\n      cast((SUM(CAST(cost * 1000000 AS INT64)) + SUM(IFNULL((\n              SELECT\n                SUM(CAST(c.amount * 1000000 AS INT64))\n              FROM\n                UNNEST(credits) c),\n          0))) / 1000000 as numeric)  AS total_cost,\n      usage.pricing_unit AS billing_unit,\n      cast(SUM(usage.amount_in_pricing_units) as numeric)  AS billing_usage_amount,\n      'GCP' AS provider\n      ,current_date()  load_date\t\n      ,current_date() update_date\n      ,'Test dbt' as observation \n    FROM `metrics-streams-dev`.`GoogleCloudBillingDetail`.`BillingDetailExport` \n    WHERE\n      PARTITIONTIME >= DATETIME_SUB(CAST(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) as TIMESTAMP), INTERVAL 1 DAY)\n      AND PARTITIONTIME <= DATETIME_ADD(cast(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) as TIMESTAMP ),INTERVAL 1 DAY)\n      AND TIMESTAMP_TRUNC(usage_start_time, DAY) >=cast(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) as timestamp)\n      AND TIMESTAMP_TRUNC(usage_start_time, DAY) <= cast(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) as timestamp)\n       AND (   (  PROJECT.id = \"gobiernoit-reservas\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"dev05-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-cp-bq02\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"dev04b-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-shp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bigqueue-test\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-mkt-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"dev02-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-fra-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-db-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"dev03-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bps-com-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"dev01-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"mid-mob-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbt-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"high-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-cp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpbs-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bigqueue\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"test-mp-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"low-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"bpt-api-bq01\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR  (  PROJECT.id = \"shared-vpc-224614\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\"))  OR (resource.global_name like \"%//bigquery.googleapis.com/projects/melidata-marketplace/datasets/melidata%\" AND PROJECT.id = \"melidata-marketplace\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource.name like \"%desaenv%\" AND PROJECT.id = \"598925332888\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource.name like \"%DESAENV%\" AND PROJECT.id = \"dbaas-268214\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource.name like \"%desaenv%\" AND PROJECT.id = \"dbaas-268214\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (resource.name like \"%DESAENV%\" AND PROJECT.id = \"598925332888\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (service.description = \"Compute Engine\" AND PROJECT.id = \"fury-202121\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")) OR (service.description = \"Compute Engine\" AND PROJECT.id = \"dbaas-268214\" AND ( usage_start_time BETWEEN \"2024-06-01\" AND \"2024-06-05\")))\n    GROUP BY 1, 2, 3, 4, 5, 7, 9, 10, 11, 12\n    HAVING total_cost > 0.0", "relation_name": "`metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_gcp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:09.513236Z", "completed_at": "2024-06-06T18:44:11.403755Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:11.405911Z", "completed_at": "2024-06-06T18:44:11.405937Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.8965036869049072, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.substract_get_OffFury_oci", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` \n\n\n\n\n\n\n\n\n       \n           \n\n       \n           \n\n       \n           \n\n       \n           \n\n       \n           \n\n       \n           \n\n       \n           \n\n\nSELECT\n      cast(TIMESTAMP_TRUNC(cost_lineItem_intervalUsageStart, DAY) AS datetime) datetime,\n     'ocid1.tenancy.oc1..aaaaaaaalgfveinmsacv4lo36wk4hfoiokh2m52j72sw5f4boms676vvc2da' AS account_id,\n      CONCAT('OCI_',cost_product_Description) AS service_type,\n      COALESCE(usage_product_resource,null,'UNDEFINED')  AS billing_key,\n      'NO-STACK' AS service_name,\n      CAST(SUM(ROUND(cost_total_cost_US,2)) AS NUMERIC)  AS total_cost,\n      COALESCE(usage_consumedQuantityUnits,null,'UNDEFINED') billing_unit,\n      CAST(SUM(ROUND(cost_total_usage,2)) AS NUMERIC)  AS billing_usage_amount,\n      'OCI' AS provider\n      ,current_date()  load_date\n      ,current_date() update_date\n      ,'Test dbt' as observation\n    FROM `metrics-streams-dev`.`WorkData`.`BillingOracleAnnualUnified`\n    WHERE\n        (cost_product_Description = \"Exadata X9M Additional Storage Instance Meter\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\") OR (cost_product_Description = \"Exadata X8M Additional Storage Instance Meter\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\") OR (cost_product_Description = \"Exadata X9M Additional Compute Instance Meter\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\") OR (cost_product_Description = \"Database Exadata - Additional OCPUs - BYOL\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\") OR (cost_product_Description = \"Exadata X9M Quarter Rack Instance Meter\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\") OR (cost_product_Description = \"Exadata X8M Quarter Rack Instance Meter\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\") OR (cost_product_Description = \"Exadata X8M Additional Compute Instance Meter\"  AND  cost_lineItem_intervalUsageStart BETWEEN \"2024-06-01\" AND \"2024-06-05\")\n    GROUP BY 1,2,3,4,5,7,9,10,11,12\n    HAVING total_cost > 0.0", "relation_name": "`metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_oci`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:11.412066Z", "completed_at": "2024-06-06T18:44:12.470347Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:12.472534Z", "completed_at": "2024-06-06T18:44:12.472561Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0642383098602295, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.substract_get_rules_fury", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output`\n\n\n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'mqadmin' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"mqadmin\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'mq-pubsub-poc' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"mq-pubsub-poc\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'mqapi' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"mqapi\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'bq-provider-manager' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"bq-provider-manager\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'mqpusher' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"mqpusher\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'mq-publisher' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"mq-publisher\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'bigqueue-load-testing-utils' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"bigqueue-load-testing-utils\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'bq-consumer-mock' tag_value,\n        '!=' operator,\n        '2023-02-01' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"bq-consumer-mock\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'logan' tag_value,\n        '!=' operator,\n        '2022-12-02' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"logan\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'logs-collector' tag_value,\n        '!=' operator,\n        '2022-12-02' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"logs-collector\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'logs-admin' tag_value,\n        '!=' operator,\n        '2022-12-02' from_date,\n        '2030-12-31' to_date,\n        '(application_name != \"logs-admin\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'melidata-tracking-api' tag_value,\n        '!=' operator,\n        '2024-04-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"melidata-tracking-api\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'traffic-layer' tag_value,\n        '!=' operator,\n        '2022-01-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"traffic-layer\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'kvsapi' tag_value,\n        '!=' operator,\n        '2022-01-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"kvsapi\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'kvsapi-migrator' tag_value,\n        '!=' operator,\n        '2022-01-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"kvsapi-migrator\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'dsapi' tag_value,\n        '!=' operator,\n        '2022-01-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"dsapi\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'dsadmin' tag_value,\n        '!=' operator,\n        '2022-01-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"dsadmin\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'melistreams-commons' tag_value,\n        '!=' operator,\n        '2023-08-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"melistreams-commons\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'melistreams-producer' tag_value,\n        '!=' operator,\n        '2023-08-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"melistreams-producer\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'melistreams-admin' tag_value,\n        '!=' operator,\n        '2023-08-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"melistreams-admin\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'melistreams-pusher' tag_value,\n        '!=' operator,\n        '2023-08-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"melistreams-pusher\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'melistreams' tag_value,\n        '!=' operator,\n        '2023-08-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"melistreams\")' cadena\n\n    \n    union all\n    \n\n\n    \n    SELECT\n        'application_name' tag_key, \n        'message-services-util' tag_value,\n        '!=' operator,\n        '2023-08-01' from_date,\n        '2031-12-31' to_date,\n        '(application_name != \"message-services-util\")' cadena\n\n    \n\n", "relation_name": "`metrics-streams-dev`.`TemporalData`.`substract_get_rules_fury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:12.478467Z", "completed_at": "2024-06-06T18:44:13.430466Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:13.432508Z", "completed_at": "2024-06-06T18:44:13.432532Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9577100276947021, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_last_dashOffFury_values", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`\nSELECT \n                    '20240606173900' sufijo, \n                    CURRENT_DATETIME('UTC') datetime,\n                    COUNT(1) records,\n                    COALESCE(SUM(CAST(total_cost AS FLOAT64)),null,0) total_cost\n            FROM  ProcessedData.BillingDashControlBaseOffFury\n            WHERE day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AND  DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_last_dashOffFury_values`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:13.438329Z", "completed_at": "2024-06-06T18:44:14.456905Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:14.459102Z", "completed_at": "2024-06-06T18:44:14.459128Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0245537757873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_last_dashfury_values", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`\nSELECT \n                    '20240606173900' sufijo, \n                    CURRENT_DATETIME('UTC') datetime,\n                    COUNT(1) records,\n                    COALESCE(SUM(CAST(total_cost AS FLOAT64)),null,0) total_cost\n            FROM `metrics-streams-dev`.`ProcessedData`.`BillingDashControlBase`  \n            WHERE day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AND  DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_last_dashfury_values`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:14.465625Z", "completed_at": "2024-06-06T18:44:15.521068Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:15.523545Z", "completed_at": "2024-06-06T18:44:15.523574Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0620908737182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_last_final_values", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`  \nSELECT \n                            '20240606173900'  sufijo, \n                            CURRENT_DATETIME('UTC') datetime,\n                            COUNT(1) records,\n                            COALESCE(SUM(CAST(total_cost AS FLOAT64)),null,0) total_cost\n                          FROM ProcessedData.BillingfacAllocationFinal \n                          WHERE datetime BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AND  DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_last_final_values`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:15.529748Z", "completed_at": "2024-06-06T18:44:16.576692Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:16.578887Z", "completed_at": "2024-06-06T18:44:16.578915Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0529601573944092, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_prev_dashOffFury_values", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`\nSELECT '20240606173900' sufijo,\n                PARSE_DATETIME('%Y%m%d%H%M%S', '20240606173900') datetime,\n                COUNT(1) records,\n                COALESCE(SUM(CAST(total_cost AS FLOAT64)),null,0) total_cost\n          FROM ProcessedData_REPRO_snapshots.BillingDashControlBaseOffFury_20240606173900\n          WHERE day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_prev_dashOffFury_values`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:16.584820Z", "completed_at": "2024-06-06T18:44:17.572959Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:17.575319Z", "completed_at": "2024-06-06T18:44:17.575346Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9944276809692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_prev_dashfury_values", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`\nSELECT '20240606173900' sufijo, \n                PARSE_DATETIME('%Y%m%d%H%M%S', '20240606173900') datetime,\n                COUNT(1) records,\n                COALESCE(SUM(CAST(total_cost AS FLOAT64)),null,0) total_cost \n          FROM ProcessedData_REPRO_snapshots.BillingDashControlBase_20240606173900\n          WHERE day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_prev_dashfury_values`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:17.581550Z", "completed_at": "2024-06-06T18:44:18.523000Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.525489Z", "completed_at": "2024-06-06T18:44:18.525515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.947800874710083, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_prev_final_values", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`\nSELECT '20240606173900' sufijo, \n                PARSE_DATETIME('%Y%m%d%H%M%S', '20240606173900') datetime,\n                COUNT(1) records,\n                COALESCE(SUM(CAST(total_cost AS FLOAT64)),null,0) total_cost \n          FROM ProcessedData_REPRO_snapshots.BillingfacAllocationFinal_20240606173900\n          WHERE datetime BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_prev_final_values`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.531485Z", "completed_at": "2024-06-06T18:44:18.539857Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.541715Z", "completed_at": "2024-06-06T18:44:18.541736Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013762474060058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.substract_all_in_one", "compiled": true, "compiled_code": "-- depends on : (<BigQueryRelation `metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_aws`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_gcp`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_oci`>) \n\n\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_aws` \nUNION ALL \nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_gcp`\nUNION ALL \nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`substract_get_OffFury_oci`", "relation_name": "`metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.548236Z", "completed_at": "2024-06-06T18:44:18.562666Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.565118Z", "completed_at": "2024-06-06T18:44:18.565143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020685911178588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingDashHistoFullSubstract", "compiled": true, "compiled_code": "\n\n   WITH \n    days_dummies AS (\n        SELECT days_gen FROM \n        UNNEST(GENERATE_DATE_ARRAY(PARSE_DATE('%F', '2022-01-01'), DATE(CURRENT_DATE() - INTERVAL 2 DAY) , INTERVAL 1 DAY))  AS days_gen\n        ),\n\n   only_real_service_type AS (\n        SELECT DISTINCT service_type \n        FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`  \n   ),\n\n    service_type_day_real AS (\n       SELECT DATE(datetime) day,\n            service_type,\n            ROUND(SUM(total_cost),2) total_cost,\n            COUNT(1) conteo\n       FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`  \n       WHERE service_type IS NOT NULL\n       GROUP BY 1,2\n       ),\n\n    service_type_dummies AS (\n       SELECT DISTINCT service_type\n       FROM only_real_service_type \n       WHERE service_type IS NOT NULL\n       ),\n\n    matriz_days_service_type AS (\n       SELECT A.days_gen, B.service_type \n       FROM days_dummies A, service_type_dummies B\n       ),\n\n    cruce_service_type_values AS (\n       SELECT A.days_gen day,\n              A.service_type,\n              COALESCE(B.total_cost,null,0) total_cost,\n              COALESCE(B.conteo,null,0) conteo\n       FROM matriz_days_service_type A\n       LEFT JOIN service_type_day_real B\n            ON (A.days_gen=B.day AND A.service_type=B.service_type)\n       )\n\n    SELECT * FROM cruce_service_type_values", "relation_name": "`metrics-streams-dev`.`TemporalData`.`BillingDashHistoFullSubstract`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.571186Z", "completed_at": "2024-06-06T18:44:18.580946Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.583092Z", "completed_at": "2024-06-06T18:44:18.583116Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015673160552978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingfacgetBigquery", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '237' AS idcatalogoorigen,\n          'Bigquery Meli-bi-data' AS nombrenemonico,\n          '63'  AS idproceso,\n          COALESCE(username,null,'No owner') AS generator_cost_name,\n          'No Aplica' AS account_id, \n          DATE(datetime) as datetime,\n          service_name, \n          service_type, \n          billing_key, \n          billing_usage_amount billing_usage_ammount, \n          total_cost,  \n          billing_concept, \n          billing_unit, \n          initiative_id, \n          initiative_external_code,\n          initiative_external_name,\n          head, \n          sponsor,\n          1 project_id, \n          'No aplica' project_code, \n          1 team_id, \n          'No aplica' team_name, \n          avenue_id, \n          avenue_name, \n          bu_id,bu_name, \n          super_bu_id, \n          super_bu_name, \n          load_date, \n          CURRENT_DATETIME('UTC') AS update_date,\n          'Test dbt' observation,\n          CAST('155' AS INT64)  as idprocesoanterior\n      FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabBQMeliBIData`  AS BillingtabBQMeliBIData\n      WHERE DATE(datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE 155=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetBigquery`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.588925Z", "completed_at": "2024-06-06T18:44:18.598694Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.600711Z", "completed_at": "2024-06-06T18:44:18.600732Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015434741973876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingfacgetDatamesh", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '247'  AS idcatalogoorigen,\n          'Bigquery Datamesh' AS nombrenemonico,\n          '63'  AS idproceso,\n          COALESCE(service_name,null,'No owner') AS generator_cost_name,\n          'No Aplica' AS account_id, \n          DATE(datetime) as datetime,\n          service_name, \n          service_type, \n          billing_key, \n          billing_usage_amount billing_usage_ammount, \n          total_cost,  \n          billing_concept, \n          billing_unit, \n          initiative_id, \n          initiative_external_code,\n          initiative_external_name,\n          head, \n          sponsor,\n          1 project_id, \n          'No aplica' project_code, \n          1 team_id, \n          'No aplica' team_name, \n          avenue_id, \n          avenue_name, \n          bu_id,bu_name, \n          super_bu_id,\n          super_bu_name, \n          load_date, \n          CURRENT_DATETIME('UTC') AS update_date, \n          'Test dbt' observation,\n          CAST('155' AS INT64) as idprocesoanterior\n      FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabBQDatamesh`  AS BillingtabBQDatamesh\n      WHERE DATE(datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE 155=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetDatamesh`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.606507Z", "completed_at": "2024-06-06T18:44:18.615588Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.617482Z", "completed_at": "2024-06-06T18:44:18.617504Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014740228652954102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingfacgetFury", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '70'  AS idcatalogoorigen,\n          'Fury' AS nombrenemonico,\n          '63'  AS idproceso,\n          application_name AS generator_cost_name,\n          'No Aplica' AS account_id,\n          DATE(datetime) as datetime,\n          service_name, \n          service_type, \n          billing_key, \n          billing_usage_ammount,\n          total_cost,\n          billing_concept,\n          billing_unit,\n          initiative_id, \n          initiative_external_code,  \n          initiative_external_name, \n          head, \n          sponsor, \n          project_id, \n          project_code, \n          team_id, \n          team_name, \n          avenue_id, \n          avenue_name, \n          bu_id,bu_name, \n          super_bu_id,  \n          super_bu_name, \n          load_date, \n          CURRENT_DATETIME('UTC') AS update_date,\n          'Test dbt' observation,\n          idproceso  as idprocesoanterior\n      FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabFuryAllocation` as BillingtabFury\n      WHERE DATE(datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            AND NOT EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`substract_get_rules_fury` as restarfury \n                           WHERE restarfury.tag_key='application_name' AND BillingtabFury.application_name=restarfury.tag_value )\n            AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE BillingtabFury.idproceso=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetFury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.623170Z", "completed_at": "2024-06-06T18:44:18.633680Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.635605Z", "completed_at": "2024-06-06T18:44:18.635626Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016011476516723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingfacgetMelidata", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '55'  AS idcatalogoorigen,\n          'Melidata' AS nombrenemonico,\n          '63'  AS idproceso,\n          username AS generator_cost_name, \n          'No Aplica' AS account_id, \n          DATE(datetime) as datetime,\n          service_name, \n          service_type, \n          billing_key, \n          CAST(billing_usage_amount AS numeric) billing_usage_amount, \n          CAST(total_cost AS numeric) total_cost,  \n          billing_concept, \n          billing_unit, \n          initiative_id, \n          initiative_external_code, \n          initiative_external_name, \n          head, \n          sponsor,\n          1 project_id, \n          'No aplica' project_code, \n          1 team_id, \n          'No aplica' team_name, \n          avenue_id, \n          avenue_name, \n          bu_id,bu_name, \n          super_bu_id, \n          super_bu_name, \n          load_date, \n          CURRENT_DATETIME('UTC') AS update_date, \n          'Test dbt' observation,\n          idproceso  as idprocesoanterior\n      FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabMelidata`  AS BillingtabMelidata\n      WHERE DATE(datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE BillingtabMelidata.idproceso=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetMelidata`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.641209Z", "completed_at": "2024-06-06T18:44:18.650600Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.652524Z", "completed_at": "2024-06-06T18:44:18.652546Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014853715896606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingfacgetOffFury", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '72'  AS idcatalogoorigen,\n          'OffFury' AS nombrenemonico,\n          '63'  AS idproceso,\n          account_name AS generator_cost_name,\n          BillingtabOffFury.account_id,\n          DATE(BillingtabOffFury.datetime) as datetime,\n          BillingtabOffFury.service_name, \n          BillingtabOffFury.service_type, \n          BillingtabOffFury.billing_key, \n          ROUND((billing_usage_amount - IFNULL(billing_usage_ammount,0)),2) AS billing_usage_ammount,\n          ROUND((BillingtabOffFury.total_cost - IFNULL(BillingtabOffFurysubtract.total_cost,0)),2) AS total_cost,\n          billing_concept, \n          BillingtabOffFury.billing_unit, \n          CAST(initiative_id AS INT64) initiative_id,  \n          initiative_external_code, \n          initiative_external_name, \n          head, \n          sponsor, \n          1 project_id, \n          'No Aplica' project_code, \n          1 team_id, \n          'No Aplica' team_name,\n          CAST(avenue_id AS INT64) avenue_id , \n          avenue_name,\n          CAST(bu_id AS INT64) bu_id,\n          bu_name, \n          CAST(super_bu_id AS INT64) super_bu_id, \n          super_bu_name, \n          BillingtabOffFury.load_date, \n          CURRENT_DATETIME('UTC') AS update_date,\n          'Test dbt' observation, \n          BillingtabOffFury.idproceso  as idprocesoanterior\n      FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFury` as BillingtabOffFury\n      LEFT JOIN `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract` as BillingtabOffFurysubtract \n           ON (DATE(BillingtabOffFury.datetime) = DATE(BillingtabOffFurysubtract.datetime)\n              AND BillingtabOffFury.account_id  =BillingtabOffFurysubtract.account_id\n              AND BillingtabOffFury.service_type =BillingtabOffFurysubtract.service_type\n              AND BillingtabOffFury.billing_key =BillingtabOffFurysubtract.billing_key\n              AND BillingtabOffFury.service_name =BillingtabOffFurysubtract.service_name\n              AND BillingtabOffFury.billing_unit =BillingtabOffFurysubtract.billing_unit)\n      WHERE DATE(BillingtabOffFury.datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(BillingtabOffFury.datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) \n            AND (BillingtabOffFury.total_cost - IFNULL(BillingtabOffFurysubtract.total_cost,0)) > 0 \n             AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE BillingtabOffFury.idproceso=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetOffFury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.658110Z", "completed_at": "2024-06-06T18:44:18.667042Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.669071Z", "completed_at": "2024-06-06T18:44:18.669094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014616250991821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingfacgetOpenAI", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '199'  AS idcatalogoorigen,\n          nombrenemonico,\n          '63' AS idproceso,\n          generator_cost_name, \n          account_id, \n          DATE(datetime) as datetime,\n          service_name, \n          service_type, \n          billing_key, \n          billing_usage_ammount, \n          total_cost,  \n          billing_concept, \n          billing_unit, \n          initiative_id, \n          initiative_external_code, \n          initiative_external_name, \n          head, \n          sponsor,\n          project_id, \n          project_code, \n          team_id, \n          team_name, \n          avenue_id, \n          avenue_name, \n          bu_id,\n          bu_name, \n          super_bu_id, \n          super_bu_name, \n          load_date, \n          CURRENT_DATETIME('UTC') AS update_date, \n          'Test dbt' observation,\n          CAST('151' AS INT64)  as idprocesoanterior\n      FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabGENAI`  AS BillingtabGENAI\n      WHERE DATE(datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE 151=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetOpenAI`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.675018Z", "completed_at": "2024-06-06T18:44:18.684312Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.686296Z", "completed_at": "2024-06-06T18:44:18.686318Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014998435974121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingtabMelidataBIFinalCosts", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFurysubtract`\nSELECT \n          '248'  AS idcatalogoorigen,\n          'melidata-storage' AS nombrenemonico,\n          '63'  AS idproceso,\n          application_name AS generator_cost_name,\n          'No Aplica' AS account_id, \n          DATE(datetime) datetime,\n          service_name, \n          service_type, \n          billing_key, \n          CAST(billing_usage_amount AS numeric) billing_usage_amount, \n          CAST(total_cost AS numeric) total_cost,  \n          billing_concept, \n          billing_unit, \n          initiative_id, \n          initiative_external_code, \n          initiative_external_name, \n          head,\n          sponsor,\n          1 project_id, \n          'No aplica' project_code, \n          1 team_id, \n          'No aplica' team_name, \n          avenue_id, \n          avenue_name, \n          bu_id,bu_name, \n          super_bu_id, \n          super_bu_name, \n          load_date, \n          CURRENT_DATETIME('UTC') AS update_date, \n          'Test dbt' observation,\n          210 AS idprocesoanterior\nFROM `metrics-streams-dev`.`ProcessedData`.`BillingtabMelidataBIFinalCosts`  AS BillingtabMelidata\n      WHERE DATE(datetime) >= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY)\n            AND DATE(datetime) <= DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            AND EXISTS(SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output` as tempprocesos WHERE 210=tempprocesos.idproceso)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingtabMelidataBIFinalCosts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.692556Z", "completed_at": "2024-06-06T18:44:18.704631Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.706703Z", "completed_at": "2024-06-06T18:44:18.706726Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01791214942932129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_consolidate", "compiled": true, "compiled_code": "\n-- depends on : (<BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetOffFury`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetFury`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetMelidata`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetBigquery`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetOpenAI`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetDatamesh`>, Undefined)\n\n\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetOffFury`\nUNION ALL \nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetFury`\nUNION ALL \nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetMelidata`\nUNION ALL \nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetBigquery`\nUNION ALL\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetOpenAI`\nUNION ALL\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingfacgetDatamesh`\nUNION ALL\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingtabMelidataBIFinalCosts`", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.712916Z", "completed_at": "2024-06-06T18:44:18.723032Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.725237Z", "completed_at": "2024-06-06T18:44:18.725259Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015988588333129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_prefacIT", "compiled": true, "compiled_code": "\n\n-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate`\nSELECT  CAST(a.idcatalogoorigen AS INT64) idcatalogoorigen,   \n              a.nombrenemonico,\n              CAST(a.idproceso AS INT64) idproceso,\n              a.generator_cost_name,\n              a.account_id, \n              a.datetime,   \n              a.service_name,   \n              a.service_type,   \n              a.billing_key,\n              SUM(CAST(a.billing_usage_ammount AS NUMERIC)) billing_usage_ammount,   \n              SUM(CAST(a.total_cost AS NUMERIC)) total_cost,  \n              IF (a.idprocesoanterior=155, a.billing_key, a.billing_concept) billing_concept,\n              a.billing_unit,   \n              a.initiative_id,  \n              a.initiative_external_code, \n              LEFT(a.initiative_external_name,149)  initiative_external_name,\n              LEFT(a.head,149) head,\n              LEFT(a.sponsor,149) sponsor,\n              a.project_id,\n              LEFT(a.project_code,149) project_code,    \n              a.team_id,LEFT(a.team_name,149) team_name,\n              a.avenue_id, LEFT(a.avenue_name,149) avenue_name, \n              a.bu_id,\n              LEFT(a.bu_name,149) bu_name,\n              a.super_bu_id, \n              LEFT(a.super_bu_name,149) super_bu_name,\n              MIN(a.load_date) load_date,\n              MAX(a.update_date) update_date,\n              CONCAT('se sumaron ', CAST( COUNT(1) AS STRING), ' de registros') observation,\n              a.idprocesoanterior,\n              ARRAY_AGG(STRUCT(PARSE_JSON(\n                  CASE WHEN a.idprocesoanterior=155 THEN\n                       billing_concept\n                  ELSE\n                       '{\"N/A\":\"N/A\"}' \n                  END) AS user, CAST(billing_usage_ammount AS NUMERIC) AS billing_usage_ammount , CAST(total_cost  AS NUMERIC) AS total_cost)) AS consumption_type \n      FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate` AS a\n      INNER JOIN \n        (SELECT \n            final.datetime,\n            final.generator_cost_name,\n            final.billing_key,\n            final.service_type,\n            final.service_name,\n            final.billing_unit\n         FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate` AS  final\n         GROUP BY 1,2,3,4,5,6\n         HAVING COUNT(1)>1) b\n      ON      a.datetime=b.datetime\n          AND a.generator_cost_name =b.generator_cost_name\n          AND a.billing_key = b.billing_key\n          AND a.service_type = b.service_type\n          AND a.service_name = b.service_name\n          AND a.billing_unit= b.billing_unit\n      GROUP BY 1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32\n      UNION ALL\n      SELECT CAST(a.idcatalogoorigen AS INT64) idcatalogoorigen,\n             a.nombrenemonico,  \n             CAST(a.idproceso AS INT64) idproceso,\n             a.generator_cost_name,\n             a.account_id,\n             a.datetime,    \n             a.service_name,\n             a.service_type,\n             a.billing_key,\n             SUM(CAST(a.billing_usage_ammount AS NUMERIC)) billing_usage_ammount, \n             SUM(CAST(a.total_cost AS NUMERIC)) total_cost, \n             a.billing_concept,\n             a.billing_unit,\n             a.initiative_id,   \n             a.initiative_external_code,\n             LEFT(a.initiative_external_name,149) initiative_external_name,\n             LEFT(a.head,149) head,\n             LEFT(a.sponsor,149) sponsor,   \n             a.project_id,\n             LEFT(a.project_code,149) project_code, \n             a.team_id,\n             LEFT(a.team_name,149) team_name,\n             a.avenue_id,\n             LEFT(a.avenue_name,149) avenue_name,   \n             a.bu_id,\n             LEFT(a.bu_name,149) bu_name,   \n             a.super_bu_id,\n             LEFT(a.super_bu_name,149) super_bu_name,\n             MIN(a.load_date) load_date,   \n             MAX(a.update_date) update_date,\n             CONCAT('se sumaron ', CAST( COUNT(1) AS STRING), ' de registros') observation,\n             a.idprocesoanterior,\n             ARRAY_AGG(STRUCT(PARSE_JSON('{\"N/A\":\"N/A\"}') AS user, CAST(billing_usage_ammount AS NUMERIC) as billing_usage_ammount, CAST(total_cost AS NUMERIC) as total_cost )) AS consumption_type   \n      FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate`  AS a\n      INNER JOIN \n      (SELECT \n             final.datetime,\n             final.generator_cost_name,\n             final.billing_key,\n             final.service_type, \n             final.service_name,\n             final.billing_unit\n        FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate` final\n        GROUP BY 1,2,3,4,5,6\n        HAVING COUNT(1)=1) b \n      ON  (\n          a.datetime=b.datetime\n      AND a.generator_cost_name =b.generator_cost_name\n      AND a.billing_key = b.billing_key\n      AND a.service_type = b.service_type\n      AND a.service_name = b.service_name\n      AND a.billing_unit= b.billing_unit)\n      WHERE a.idprocesoanterior != 155\n      GROUP BY 1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32\n      UNION ALL\n      SELECT CAST(a.idcatalogoorigen AS INT64) idcatalogoorigen,\n             a.nombrenemonico,  \n             CAST(a.idproceso AS INT64) idproceso,\n             a.generator_cost_name,\n             a.account_id,\n             a.datetime,    \n             a.service_name,\n             a.service_type,\n             a.billing_key,\n             SUM(CAST(a.billing_usage_ammount AS NUMERIC)) billing_usage_ammount, \n             SUM(CAST(a.total_cost AS NUMERIC)) total_cost, \n             a.billing_key AS billing_concept,\n             a.billing_unit,\n             a.initiative_id,   \n             a.initiative_external_code,\n             LEFT(a.initiative_external_name,149) initiative_external_name,\n             LEFT(a.head,149) head,\n             LEFT(a.sponsor,149) sponsor,   \n             a.project_id,\n             LEFT(a.project_code,149) project_code, \n             a.team_id,\n             LEFT(a.team_name,149) team_name,\n             a.avenue_id,\n             LEFT(a.avenue_name,149) avenue_name,   \n             a.bu_id,\n             LEFT(a.bu_name,149) bu_name,   \n             a.super_bu_id,\n             LEFT(a.super_bu_name,149) super_bu_name,\n             MIN(a.load_date) load_date,   \n             MAX(a.update_date) update_date,\n             CONCAT('se sumaron ', CAST( COUNT(1) AS STRING), ' de registros') observation,\n             a.idprocesoanterior,\n             ARRAY_AGG(STRUCT(PARSE_JSON('{\"N/A\":\"N/A\"}') AS user, CAST(billing_usage_ammount AS NUMERIC) AS billing_usage_ammount, CAST(total_cost AS NUMERIC) AS total_cost )) AS consumption_type \n      FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate` a  \n      INNER JOIN\n      (SELECT \n             final.datetime,\n             final.generator_cost_name,\n             final.billing_key,\n             final.service_type, \n             final.service_name,\n             final.billing_unit\n        FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_consolidate` final\n        WHERE final.idprocesoanterior = 155\n        GROUP BY 1,2,3,4,5,6\n        HAVING COUNT(1)=1) b \n      ON  (\n          a.datetime=b.datetime\n      AND a.generator_cost_name =b.generator_cost_name\n      AND a.billing_key = b.billing_key\n      AND a.service_type = b.service_type\n      AND a.service_name = b.service_name\n      AND a.billing_unit= b.billing_unit)\n      WHERE a.idprocesoanterior = 155\n      GROUP BY 1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_prefacIT`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:18.731472Z", "completed_at": "2024-06-06T18:44:18.738199Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:18.740125Z", "completed_at": "2024-06-06T18:44:18.740154Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012451887130737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_dupli_check_it", "compiled": true, "compiled_code": "\n\n\n        SELECT DATE(datetime) day\n              ,generator_cost_name\n              ,account_id\n              ,service_type  \n              ,billing_key\n              ,service_name\n              ,billing_unit \n              ,billing_concept\n              ,idprocesoanterior\n              ,COUNT(1) records\n              ,SUM(total_cost) total_cost\n        FROM `metrics-streams-dev`.`TemporalData`.`final_prefacIT`\n        GROUP BY 1,2,3,4,5,6,7,8,9\n        HAVING COUNT(*) > 1", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_dupli_check_it`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:20.410747Z", "completed_at": "2024-06-06T18:44:20.424128Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:20.426168Z", "completed_at": "2024-06-06T18:44:20.426191Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020201444625854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_dupli_check_it_reinsert_it", "compiled": true, "compiled_code": "\n\n\n\n\n        WITH base_for_change AS (\n          SELECT A.* FROM `metrics-streams-dev`.`TemporalData`.`final_prefacIT` A \n          INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_dupli_check_it`  B \n          ON (DATE(A.datetime) = B.day AND\n              A.generator_cost_name = B.generator_cost_name AND\n              A.account_id = B.account_id AND \n              A.service_type = B.service_type AND\n              A.billing_key = B.billing_key AND\n              A.service_name = B.service_name AND  \n              A.billing_unit = B.billing_unit AND \n              A.billing_concept = B.billing_concept AND \n              A.idprocesoanterior = B.idprocesoanterior)  \n        )\n\n        SELECT * FROM base_for_change \n        WHERE TRUE \n        QUALIFY ROW_NUMBER() \n        OVER (PARTITION BY \n                DATE(datetime),\n                generator_cost_name,\n                account_id,\n                service_type,\n                billing_key,\n                service_name,\n                billing_unit,\n                billing_concept,\n                idprocesoanterior\n                ORDER BY load_date DESC) = 1", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_dupli_check_it_reinsert_it`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:20.432780Z", "completed_at": "2024-06-06T18:44:20.440353Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:20.442370Z", "completed_at": "2024-06-06T18:44:20.442392Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013273239135742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_prefacIT_nodup", "compiled": true, "compiled_code": "\n\n\n\nWITH cut_duplis AS (SELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_prefacIT`  A \n                    WHERE NOT EXISTS (SELECT 'X' FROM `metrics-streams-dev`.`TemporalData`.`final_dupli_check_it_reinsert_it` B WHERE\n                        A.datetime=B.datetime AND\n                        A.generator_cost_name = B.generator_cost_name AND\n                        A.account_id = B.account_id AND \n                        A.service_type = B.service_type AND\n                        A.billing_key = B.billing_key AND\n                        A.service_name = B.service_name AND  \n                        A.billing_unit = B.billing_unit AND \n                        A.billing_concept = B.billing_concept AND \n                        A.idprocesoanterior = B.idprocesoanterior) AND A.initiative_id IS NOT NULL\n                    )\n\nSELECT * FROM cut_duplis  \nUNION ALL\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_dupli_check_it_reinsert_it`", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_prefacIT_nodup`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:20.448729Z", "completed_at": "2024-06-06T18:44:20.460162Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:20.462193Z", "completed_at": "2024-06-06T18:44:20.462214Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017122745513916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.BillingfacAllocationFinal", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_prefacIT_nodup` \n\n\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_prefacIT_nodup`", "relation_name": "`metrics-streams-dev`.`ProcessedData`.`BillingfacAllocationFinal`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:20.468359Z", "completed_at": "2024-06-06T18:44:20.479631Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:20.481593Z", "completed_at": "2024-06-06T18:44:20.481625Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01715564727783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_prefacFI", "compiled": true, "compiled_code": "-- depends_on: __dbt__cte__final_get_finance_limits\n\n\nWITH  __dbt__cte__final_get_finance_limits as (\n-- depends_on: `metrics-streams-dev`.`TemporalData`.`final_prefacIT`\n\n\n\n\n\n    \n    \n\n\nWITH get_current_day AS (\n    SELECT CASE WHEN CAST('6' AS INT64) >= 20 THEN \n         DATE(DATE_TRUNC(CURRENT_DATE(), month) )\n    ELSE\n         DATE(DATE_TRUNC(CURRENT_DATE(), month) - INTERVAL 1 MONTH )\n    END AS limit_finance),\n\n    get_range AS (SELECT limit_finance, \n           DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) start_date, \n           DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) end_date \n    FROM get_current_day), \n\n    get_limits_ind AS (\n    SELECT \n        CASE \n            WHEN  A.start_date >= B.limit_finance AND A.end_date >= B.limit_finance THEN\n                STRUCT(A.start_date as start_date, A.end_date as end_date) \n            WHEN  A.start_date < B.limit_finance AND A.end_date < B.limit_finance THEN\n                STRUCT(DATE(CURRENT_DATE('UTC') + INTERVAL 100 DAY) as start_date, DATE(CURRENT_DATE('UTC') + INTERVAL 100 DAY) as end_date) \n            WHEN  A.start_date < B.limit_finance AND A.end_date >= B.limit_finance THEN\n                STRUCT(B.limit_finance as start_date, DATE(A.end_date) as end_date ) \n       END AS output  \n    FROM get_range A , get_current_day B )\n\n    SELECT * FROM get_limits_ind\n    WHERE output IS NOT NULL\n), finance_limits AS (\n    SELECT output.start_date start_date, \n           output.end_date end_date \n    FROM __dbt__cte__final_get_finance_limits\n)\n\nSELECT A.* FROM `metrics-streams-dev`.`TemporalData`.`final_prefacIT_nodup` A , finance_limits B\nWHERE  DATE(A.datetime) BETWEEN B.start_date AND B.end_date", "relation_name": "`metrics-streams-dev`.`billing_wr_test`.`final_prefacFI`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:20.487508Z", "completed_at": "2024-06-06T18:44:20.495019Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:20.497224Z", "completed_at": "2024-06-06T18:44:20.497248Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013608217239379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_tmp_BillingDashHistoFullAccountOffFury", "compiled": true, "compiled_code": "-- depends_on: `metrics-streams-dev`.`ProcessedData`.`BillingfacAllocationFinal`\n\n\n\n   WITH \n    days_dummies AS (\n        SELECT days_gen FROM \n        UNNEST(GENERATE_DATE_ARRAY(PARSE_DATE('%F', '2022-01-01'), DATE(CURRENT_DATE() - INTERVAL 2 DAY) , INTERVAL 1 DAY))  AS days_gen\n        ),\n\n    account_day_real AS (\n       SELECT DATE(datetime) day,\n            account_id, \n            account_name,\n            idproceso,\n            ROUND(SUM(total_cost),2) total_cost,\n            COUNT(1) conteo\n       FROM `metrics-streams-dev`.`ProcessedData`.`BillingtabOffFury` B \n       WHERE account_id IS NOT NULL AND account_name IS NOT NULL\n       GROUP BY 1,2,3,4\n       ),\n\n    account_dummies AS (\n       SELECT account_id, account_name, idproceso\n       FROM account_day_real \n       WHERE account_name IS NOT NULL AND account_id IS NOT NULL\n       GROUP BY 1,2,3 \n       ),\n\n    matriz_days_account AS (\n       SELECT A.days_gen, B.account_id , B.account_name, B.idproceso\n       FROM days_dummies A, account_dummies B\n       ),\n\n    cruce_account_values AS (\n       SELECT A.days_gen day,\n              A.account_id,\n              A.account_name,\n              A.idproceso,\n              COALESCE(B.total_cost,null,0) total_cost,\n              COALESCE(B.conteo,null,0) conteo\n       FROM matriz_days_account A\n       LEFT JOIN account_day_real B\n            ON (A.days_gen=B.day AND A.account_id=B.account_id AND A.account_name=B.account_name AND A.idproceso=B.idproceso)\n       )\n\n    SELECT * FROM cruce_account_values", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_tmp_BillingDashHistoFullAccountOffFury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:20.503405Z", "completed_at": "2024-06-06T18:44:22.288921Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:22.291045Z", "completed_at": "2024-06-06T18:44:22.291070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7914085388183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.BillingfacAllocationFinal.final_load_tofinal", "compiled": true, "compiled_code": "WITH \n\n\n\n  lista_proc AS (SELECT idproceso FROM `metrics-streams-dev`.`TemporalData`.`final_tmp_process_output`),\n\n  days_dummies AS (\n        SELECT days_gen FROM \n        UNNEST(GENERATE_DATE_ARRAY(PARSE_DATE('%F', '2024-06-01'), PARSE_DATE('%F', '2024-06-01')))  AS days_gen\n        ),\n  \n  matriz_days_pipes AS (\n       SELECT * \n       FROM days_dummies, lista_proc \n       ),\n\n\n  lista_validos AS (SELECT idprocesoanterior FROM `metrics-streams-dev`.`ProcessedData`.`BillingfacAllocationFinal` \n                    WHERE DATE(datetime) BETWEEN PARSE_DATE('%F', '2024-06-01') - INTERVAL 7 DAY  \n                          AND PARSE_DATE('%F', '2024-06-01') - INTERVAL 1 DAY GROUP BY 1),\n\n  lista_real AS (SELECT DATE(datetime) day, idprocesoanterior, COUNT(1), SUM(total_cost) \n                 FROM `metrics-streams-dev`.`ProcessedData`.`BillingfacAllocationFinal` \n                 WHERE DATE(datetime) BETWEEN PARSE_DATE('%F', '2024-06-01') AND PARSE_DATE('%F', '2024-06-05')\n                 GROUP BY 1,2 )\n  \n  SELECT * FROM matriz_days_pipes A WHERE EXISTS(SELECT 'X' FROM lista_validos C WHERE A.idproceso=C.idprocesoanterior)\n                             AND NOT EXISTS(SELECT 'X' FROM lista_real B WHERE A.idproceso=B.idprocesoanterior AND A.days_gen=B.day)", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:22.298391Z", "completed_at": "2024-06-06T18:44:22.310653Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:22.312793Z", "completed_at": "2024-06-06T18:44:22.312815Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01823258399963379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.BillingfacAllocationFinal_Finance", "compiled": true, "compiled_code": "\n\nSELECT * FROM `metrics-streams-dev`.`billing_wr_test`.`final_prefacFI`", "relation_name": "`metrics-streams-dev`.`ProcessedData`.`BillingfacAllocationFinal_Finance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:22.318915Z", "completed_at": "2024-06-06T18:44:22.326515Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:22.328515Z", "completed_at": "2024-06-06T18:44:22.328538Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013445377349853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_BillingDashHistoFullAccountOffFury", "compiled": true, "compiled_code": "\n\nSELECT DISTINCT \n              day, \n              account_id, \n              account_name,\n              total_cost, \n              conteo,\n              ROW_NUMBER() OVER (PARTITION BY day ORDER BY total_cost DESC) AS ranking\nFROM `metrics-streams-dev`.`TemporalData`.`final_tmp_BillingDashHistoFullAccountOffFury`", "relation_name": "`metrics-streams-dev`.`TemporalData`.`BillingDashHistoFullAccountOffFury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:22.334972Z", "completed_at": "2024-06-06T18:44:22.342482Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:22.344528Z", "completed_at": "2024-06-06T18:44:22.344550Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013317108154296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_BillingDashControlBaseOffFury", "compiled": true, "compiled_code": "\n\n   WITH     \n    selected_base AS (\n      SELECT DATE(day) day,\n        account_id, \n        account_name,\n        total_cost,\n        conteo\n      FROM `metrics-streams-dev`.`TemporalData`.`BillingDashHistoFullAccountOffFury`  \n      QUALIFY ROW_NUMBER() OVER (PARTITION BY day ORDER BY total_cost DESC) <= 20\n      UNION ALL\n      SELECT day, \n             'ID_OTHERS' account_id, \n             'OTHERS ACCOUNTS TOP 20' account_name, \n             ROUND(SUM(total_cost),2) total_cost,\n             SUM(conteo) conteo\n      FROM (\n            SELECT DATE(day) day,\n                    account_id,\n                    account_name,\n                    total_cost,\n                    conteo\n            FROM  `metrics-streams-dev`.`TemporalData`.`BillingDashHistoFullAccountOffFury`\n            QUALIFY ROW_NUMBER() OVER (PARTITION BY day ORDER BY total_cost DESC) > 20)\n      GROUP BY 1,2,3  ) \n\n    SELECT *,\n        ROW_NUMBER() OVER (PARTITION BY day ORDER BY total_cost DESC) AS ranking \n    FROM selected_base\n    ORDER BY 1 DESC, 4 DESC", "relation_name": "`metrics-streams-dev`.`ProcessedData`.`BillingDashControlBaseOffFury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:22.351046Z", "completed_at": "2024-06-06T18:44:22.359370Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:22.361327Z", "completed_at": "2024-06-06T18:44:22.361350Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014209270477294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_BillingDashHistoRankingOffFury", "compiled": true, "compiled_code": "\n\nSELECT account_name, ARRAY_AGG(STRUCT (day, ranking, conteo, total_cost )) histo_rank \n          FROM `metrics-streams-dev`.`ProcessedData`.`BillingDashControlBaseOffFury`\n    GROUP BY account_name", "relation_name": "`metrics-streams-dev`.`billing_wr_test`.`BillingDashHistoRankingOffFury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:22.367745Z", "completed_at": "2024-06-06T18:44:23.389785Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:23.392388Z", "completed_at": "2024-06-06T18:44:23.392415Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0283684730529785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_change_fury", "compiled": true, "compiled_code": "\n-- depends on : (<BigQueryRelation `metrics-streams-dev`.`billing_wr_test`.`BillingDashHistoRankingOffFury`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`>)  \nWITH dif_1 AS (\n                SELECT day,\n                    idproceso,\n                    proceso,\n                    conteo,\n                    COALESCE(CAST(total_cost AS FLOAT64),null,0) AS total_cost  \n                FROM \n                `metrics-streams-dev`.`ProcessedData`.`BillingDashControlBase`\n                WHERE \n                day BETWEEN  DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n                AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) \n                EXCEPT \n                DISTINCT \n                SELECT day,\n                    idproceso,\n                    proceso,\n                    conteo,\n                    COALESCE(CAST(total_cost AS FLOAT64),null,0) AS total_cost \n                FROM \n                ProcessedData_REPRO_snapshots.BillingDashControlBase_20240606173900 \n                WHERE \n                day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n                AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            ),\n            \n             dif_2 AS (\n                 SELECT day,\n                 idproceso,\n                 proceso,\n                 conteo,\n                 COALESCE(CAST(total_cost AS FLOAT64),null,0) AS total_cost \n        FROM \n          ProcessedData_REPRO_snapshots.BillingDashControlBase_20240606173900 \n        WHERE \n          day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n          AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) \n        EXCEPT \n          DISTINCT \n        SELECT day,\n               idproceso,\n               proceso,\n               conteo,\n               COALESCE(CAST(total_cost AS FLOAT64),null,0) AS total_cost         \n        FROM\n          `metrics-streams-dev`.`ProcessedData`.`BillingDashControlBase`\n        WHERE \n          day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n          AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n      )\n        \n        SELECT 'LasttoPrev' sentido, * FROM dif_1\n        UNION ALL\n        SELECT 'PrevtoLast' sentido, * FROM dif_2", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_change_fury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:23.398664Z", "completed_at": "2024-06-06T18:44:24.348324Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:24.351205Z", "completed_at": "2024-06-06T18:44:24.351232Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9575698375701904, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_change_offfury", "compiled": true, "compiled_code": "-- depends on : (<BigQueryRelation `metrics-streams-dev`.`billing_wr_test`.`BillingDashHistoRankingOffFury`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`>)  \n\n\n        WITH dif_1 AS (\n                SELECT * \n                FROM `metrics-streams-dev`.`ProcessedData`.`BillingDashControlBaseOffFury`\n                WHERE \n                day BETWEEN  DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n                AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) \n                EXCEPT \n                DISTINCT \n                SELECT * \n                FROM \n                ProcessedData_REPRO_snapshots.BillingDashControlBaseOffFury_20240606173900 \n                WHERE \n                day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n                AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            ),\n            \n             dif_2 AS (\n                SELECT * \n                FROM \n                ProcessedData_REPRO_snapshots.BillingDashControlBaseOffFury_20240606173900 \n                WHERE \n                day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n                AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) \n                EXCEPT \n                DISTINCT \n                SELECT *         \n                FROM\n                `metrics-streams-dev`.`ProcessedData`.`BillingDashControlBaseOffFury`\n                WHERE \n                day BETWEEN DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) \n                AND DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY)\n            )\n        \n        SELECT 'LasttoPrev' sentido, * FROM dif_1\n        UNION ALL\n        SELECT 'PrevtoLast' sentido, * FROM dif_2", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_change_offfury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:24.358370Z", "completed_at": "2024-06-06T18:44:25.382960Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:25.385180Z", "completed_at": "2024-06-06T18:44:25.385207Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0306308269500732, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_for_newrecord_fury", "compiled": true, "compiled_code": "-- depends_on: (<BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_change_fury`>)\nSELECT   \n                '20240606173900' sufijo, \n                ARRAY_AGG(\n                STRUCT (\n                    COALESCE(day,null,DATE(CURRENT_DATE())) AS day,\n                    COALESCE(idproceso,null,0) AS idproceso,\n                    COALESCE(proceso,null,'EMPTY') AS proceso,\n                    COALESCE(sentido,null,'EMPTY') AS sentido,\n                    COALESCE(CAST(conteo AS FLOAT64),null,0) AS conteo,\n                    COALESCE(CAST(total_cost AS FLOAT64),null,0) AS total_cost\n                    )) AS value \n\n               FROM (SELECT CURRENT_DATE() day, \n                    0 idproceso,\n                    'NULL' proceso, \n                    'NULL' sentido,\n                    0 conteo, \n                    0 total_cost)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_for_newrecord_fury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:25.391899Z", "completed_at": "2024-06-06T18:44:26.297732Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:26.300066Z", "completed_at": "2024-06-06T18:44:26.300094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.912653923034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_for_newrecord_offfury", "compiled": true, "compiled_code": "-- depends_on: (<BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_last_snapshot`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_change_offfury`>)\nSELECT   \n                '20240606173900'  sufijo, \n                ARRAY_AGG(\n                STRUCT (\n                    COALESCE(day,null,DATE(CURRENT_DATE())) AS day,\n                    COALESCE(account_id,null,'EMPTY') AS account_id,\n                    COALESCE(account_name,null,'EMPTY') AS account_name,\n                    'N/A' AS responsable,\n                    COALESCE(sentido,null,'EMPTY') AS sentido,\n                    COALESCE(CAST(total_cost AS FLOAT64),null,0) AS total_cost,\n                    COALESCE(CAST(conteo AS INT64),null,0) AS conteo,\n                    COALESCE(CAST(ranking AS INT64),null,0) AS ranking\n                    )) AS value   \n            FROM (SELECT CURRENT_DATE() day, \n                  'NULL' account_id,\n                  'NULL' account_name, \n                  'N/A' responsable,\n                  'NULL' sentido,\n                  0 total_cost,\n                  0 conteo, \n                  0 ranking)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_for_newrecord_offfury`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:26.308352Z", "completed_at": "2024-06-06T18:44:26.322762Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:26.324955Z", "completed_at": "2024-06-06T18:44:26.324979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02100396156311035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.final_new_record_bitacora", "compiled": true, "compiled_code": "-- depends on : (<BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_for_newrecord_fury`>, <BigQueryRelation `metrics-streams-dev`.`TemporalData`.`final_for_newrecord_offfury`>)  \n\n\n    SELECT \n      A.sufijo, \n      B.datetime,\n      'Test dbt' observation,\n      STRUCT(A.records, A.total_cost) AS last_final,\n      STRUCT(B.records, B.total_cost) AS prev_final,\n      STRUCT(C.records, C.total_cost) AS last_dash_fury,\n      STRUCT(D.records, D.total_cost) AS prev_dash_fury,\n      STRUCT(E.records, E.total_cost) AS last_dash_offfury,\n      STRUCT(F.records, F.total_cost) AS prev_dash_offfury,\n      (A.records    - B.records)    dif_final_records,\n      (A.total_cost - B.total_cost) dif_final_cost,\n      (C.records    - D.records)    dif_dash_fury_records,\n      (C.total_cost - D.total_cost) dif_dash_fury_cost,\n      (E.records    - F.records)    dif_dash_offfury_records,\n      (E.total_cost - F.total_cost) dif_dash_offfury_cost,\n      CAST(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 5 DAY) AS STRING)  date_start_repro,\n      CAST(DATE(TIMESTAMP_TRUNC(CURRENT_TIMESTAMP(), day, \"UTC\") - INTERVAL 1 DAY) AS STRING) date_end_repro,\n      G.value struct_fury_dash, \n      H.value struct_offfury_dash\n    FROM  `metrics-streams-dev`.`TemporalData`.`final_last_final_values`                A \n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_prev_final_values`       B  ON (A.sufijo=B.sufijo)\n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_last_dashfury_values`    C  ON (A.sufijo=C.sufijo)\n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_prev_dashfury_values`    D  ON (A.sufijo=D.sufijo)\n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_last_dashOffFury_values` E  ON (A.sufijo=E.sufijo)\n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_prev_dashOffFury_values` F  ON (A.sufijo=F.sufijo)\n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_for_newrecord_fury`      G  ON (A.sufijo=G.sufijo)\n        INNER JOIN `metrics-streams-dev`.`TemporalData`.`final_for_newrecord_offfury`  H  ON (A.sufijo=H.sufijo)", "relation_name": "`metrics-streams-dev`.`TemporalData`.`final_new_record_bitacora`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-06T18:44:26.332243Z", "completed_at": "2024-06-06T18:44:27.793128Z"}, {"name": "execute", "started_at": "2024-06-06T18:44:27.795134Z", "completed_at": "2024-06-06T18:44:27.795158Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.4667754173278809, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.BillingfacAllocationFinal.BillingBitacoraRepro", "compiled": true, "compiled_code": "-- depends on : `metrics-streams-dev`.`TemporalData`.`final_new_record_bitacora`  \n\n\n\nSELECT * FROM `metrics-streams-dev`.`TemporalData`.`final_new_record_bitacora`", "relation_name": "`metrics-streams-dev`.`billing_wr_test`.`BillingBitacoraRepro`"}], "elapsed_time": 43.42740750312805, "args": {"log_level": "info", "output": "text", "favor_state": false, "quiet": false, "defer": false, "version_check": true, "indirect_selection": "eager", "introspect": true, "which": "compile", "print": true, "static_parser": true, "log_path": "/home/wilson_roldan/dbt_projects/BillingfacAllocationFinal/logs", "send_anonymous_usage_stats": true, "show_resource_report": false, "printer_width": 80, "invocation_command": "dbt compile", "select": [], "exclude": [], "vars": {}, "warn_error_options": {"include": [], "exclude": []}, "partial_parse": true, "write_json": true, "populate_cache": true, "inject_ephemeral_ctes": true, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "use_colors": true, "profiles_dir": "/home/wilson_roldan/.dbt", "cache_selected_only": false, "project_dir": "/home/wilson_roldan/dbt_projects/BillingfacAllocationFinal", "strict_mode": false, "log_level_file": "debug", "use_colors_file": true, "log_format_file": "debug", "enable_legacy_logger": false, "macro_debugging": false, "log_format": "default"}}